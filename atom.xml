<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>陪你度过漫长的岁月</title>
  <subtitle>合乎于心</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wenni328.github.io.com/"/>
  <updated>2017-08-17T02:51:27.147Z</updated>
  <id>http://wenni328.github.io.com/</id>
  
  <author>
    <name>陪你度过漫长的岁月</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>redis缓存学习</title>
    <link href="http://wenni328.github.io.com/2017/08/17/redis%E5%AD%A6%E4%B9%A0/"/>
    <id>http://wenni328.github.io.com/2017/08/17/redis学习/</id>
    <published>2017-08-17T01:05:53.000Z</published>
    <updated>2017-08-17T02:51:27.147Z</updated>
    
    <content type="html"><![CDATA[<h3 id="redis简介"><a href="#redis简介" class="headerlink" title="redis简介"></a>redis简介</h3><p>Redis 是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作数据库、缓存和消息中间件。 它支持多种类型的数据结构，如 字符串（strings）， 散列（hashes）， 列表（lists）， 集合（sets）， 有序集合（sorted sets） 与范围查询， bitmaps， hyperloglogs 和 地理空间（geospatial） 索引半径查询。 Redis 内置了 复制（replication），LUA脚本（Lua scripting）， LRU驱动事件（LRU eviction），事务（transactions） 和不同级别的 磁盘持久化（persistence）， 并通过 Redis哨兵（Sentinel）和自动 分区（Cluster）提供高可用性（high availability）。<br><strong>更多知识请关注</strong><a href="http://www.redis.cn" target="_blank" rel="external">redis中文官网</a></p>
<h3 id="redis安装（linux）"><a href="#redis安装（linux）" class="headerlink" title="redis安装（linux）"></a>redis安装（linux）</h3><p>打开linux终端，使用命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ wget http://download.redis.io/releases/redis-2.8.17.tar.gz</div><div class="line">$ tar xzf redis-2.8.17.tar.gz</div><div class="line">$ <span class="built_in">cd</span> redis-2.8.17</div><div class="line">$ make</div></pre></td></tr></table></figure></p>
<p><more><br>启动服务端</more></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> src</div><div class="line">$ ./redis-server</div></pre></td></tr></table></figure>
<p>启动客户端<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> src</div><div class="line">$ ./redis-cli</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;redis简介&quot;&gt;&lt;a href=&quot;#redis简介&quot; class=&quot;headerlink&quot; title=&quot;redis简介&quot;&gt;&lt;/a&gt;redis简介&lt;/h3&gt;&lt;p&gt;Redis 是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作数据库、缓存和消息中间件
    
    </summary>
    
    
      <category term="redis" scheme="http://wenni328.github.io.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>java知识图谱</title>
    <link href="http://wenni328.github.io.com/2017/08/16/java%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    <id>http://wenni328.github.io.com/2017/08/16/java知识图谱/</id>
    <published>2017-08-16T02:22:50.000Z</published>
    <updated>2017-08-16T02:31:19.684Z</updated>
    
    <content type="html"><![CDATA[<h3 id="java知识图谱"><a href="#java知识图谱" class="headerlink" title="java知识图谱"></a>java知识图谱</h3><p><a href="http://oufb2rqt9.bkt.clouddn.com/java%E7%9F%A5%E8%AF%86%E7%BB%93%E6%9E%84%E5%9B%BE.jpg" target="_blank" rel="external">java知识图谱(借用csdn大佬的图谱)</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;java知识图谱&quot;&gt;&lt;a href=&quot;#java知识图谱&quot; class=&quot;headerlink&quot; title=&quot;java知识图谱&quot;&gt;&lt;/a&gt;java知识图谱&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://oufb2rqt9.bkt.clouddn.com/java
    
    </summary>
    
    
      <category term="知识概览" scheme="http://wenni328.github.io.com/tags/%E7%9F%A5%E8%AF%86%E6%A6%82%E8%A7%88/"/>
    
  </entry>
  
  <entry>
    <title>思创记录</title>
    <link href="http://wenni328.github.io.com/2017/08/14/%E6%80%9D%E5%88%9B%E8%AE%B0%E5%BD%95/"/>
    <id>http://wenni328.github.io.com/2017/08/14/思创记录/</id>
    <published>2017-08-14T08:02:14.000Z</published>
    <updated>2017-08-17T02:54:53.125Z</updated>
    
    <content type="html"><![CDATA[<h3 id="获取当前用户"><a href="#获取当前用户" class="headerlink" title="获取当前用户"></a>获取当前用户</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">*service*</div><div class="line"><span class="meta">@Autowired</span></div><div class="line"><span class="keyword">protected</span> IUserService userService;<span class="comment">// 统一用户服务</span></div><div class="line">String userId=userService.getCurrentUser().getUserId();</div></pre></td></tr></table></figure>
<h3 id="列表显示数据"><a href="#列表显示数据" class="headerlink" title="列表显示数据"></a>列表显示数据</h3><h4 id="连表查询但获取的是一个表的数据"><a href="#连表查询但获取的是一个表的数据" class="headerlink" title="连表查询但获取的是一个表的数据"></a>连表查询但获取的是一个表的数据</h4><a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">  <span class="comment">/**</span></div><div class="line"><span class="comment"> * 获取当前用户参加的议题</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> page</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> model</span></div><div class="line"><span class="comment"> * <span class="doctag">@return</span></span></div><div class="line"><span class="comment"> * <span class="doctag">@throws</span> SystemException</span></div><div class="line"><span class="comment"> * <span class="doctag">@throws</span> ServiceException</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> Page&lt;TGxMeetingAgenda&gt; <span class="title">getCurrentUserJoin</span><span class="params">(Page page, String meetingId)</span> <span class="keyword">throws</span> SystemException,ServiceException</span>&#123;</div><div class="line">	</div><div class="line">	List params = <span class="keyword">new</span> ArrayList();</div><div class="line">	StringBuffer hql=<span class="keyword">new</span> StringBuffer(<span class="string">"select ad from TGxMeetingMru mru,TGxMeetingAgenda ad"</span>);</div><div class="line">	hql.append(<span class="string">" where mru.mruMid=ad.meetingId"</span>);</div><div class="line">	hql.append(<span class="string">" and mru.mruAid=ad.id"</span>);</div><div class="line">	<span class="keyword">if</span>(StringUtils.isNotBlank(meetingId))&#123;</div><div class="line">		hql.append(<span class="string">" and ad.meetingId=?"</span>);</div><div class="line">		params.add(meetingId);</div><div class="line">	&#125;</div><div class="line">	hql.append(<span class="string">" and mru.mruUserid=?"</span>);</div><div class="line">	params.add(userService.getCurrentUser().getUserId());</div><div class="line">	page=meetingAdDAO.find(page, hql.toString(), params.toArray());</div><div class="line">	<span class="keyword">return</span> page;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="单表查询数据-带条件"><a href="#单表查询数据-带条件" class="headerlink" title="单表查询数据(带条件)"></a>单表查询数据(带条件)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * author:</span></div><div class="line"><span class="comment"> * description:	获取所有没有删除的会议室 page对象</span></div><div class="line"><span class="comment"> * modifyer:</span></div><div class="line"><span class="comment"> * description:</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> page  分页对象</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> model	搜索条件</span></div><div class="line"><span class="comment"> * <span class="doctag">@return</span></span></div><div class="line"><span class="comment"> * <span class="doctag">@throws</span> SystemException</span></div><div class="line"><span class="comment"> * <span class="doctag">@throws</span> ServiceException</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">public</span> Page&lt;TGxMeetingAgenda&gt; <span class="title">getAllPage</span><span class="params">(Page page, TGxMeetingAgenda model)</span> <span class="keyword">throws</span> SystemException,ServiceException</span>&#123;</div><div class="line">	<span class="keyword">try</span>&#123;</div><div class="line">		StringBuilder hql = <span class="keyword">new</span> StringBuilder();</div><div class="line">		List palist=<span class="keyword">new</span> ArrayList();</div><div class="line">		hql.append(<span class="string">"select t from TGxMeetingAgenda t where 1=1"</span>);</div><div class="line">		</div><div class="line">		<span class="keyword">if</span>(<span class="keyword">null</span>!=model.getMeetingId())&#123;<span class="comment">//会议id</span></div><div class="line">			String meetingId = model.getMeetingId();</div><div class="line">			<span class="keyword">if</span>(!<span class="string">""</span>.equals(meetingId)&amp;&amp;<span class="keyword">null</span>!=meetingId)&#123;</div><div class="line">				hql.append(<span class="string">" and t.meetingId = ?"</span>);</div><div class="line">				palist.add(FiltrateContent.getNewContent(meetingId));</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">		<span class="keyword">if</span>(<span class="keyword">null</span>!=model.getTitle())&#123;<span class="comment">//议题</span></div><div class="line">			String mTile = model.getTitle();</div><div class="line">			<span class="keyword">if</span>(!<span class="string">""</span>.equals(mTile)&amp;&amp;<span class="keyword">null</span>!=mTile)&#123;</div><div class="line">				hql.append(<span class="string">" and t.title like ?"</span>);</div><div class="line">				palist.add(<span class="string">"%"</span>+FiltrateContent.getNewContent(mTile.trim())+<span class="string">"%"</span>);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">		<span class="keyword">if</span>(<span class="keyword">null</span>!=model.getUserName())&#123;<span class="comment">//参与人员</span></div><div class="line">			String userName = model.getUserName();</div><div class="line">			<span class="keyword">if</span>(!<span class="string">""</span>.equals(userName)&amp;&amp;<span class="keyword">null</span>!=userName)&#123;</div><div class="line">				hql.append(<span class="string">" and t.userName like ?"</span>);</div><div class="line">				palist.add(<span class="string">"%"</span>+FiltrateContent.getNewContent(userName.trim())+<span class="string">"%"</span>);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		hql.append(<span class="string">"  order by t.sort asc"</span>);<span class="comment">//创建时间排序</span></div><div class="line">		<span class="keyword">return</span>  meetingDAO.find(page, hql.toString(), palist.toArray());</div><div class="line">	&#125;<span class="keyword">catch</span>(ServiceException e)&#123;</div><div class="line">		<span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(MessagesConst.find_error,               </div><div class="line">				<span class="keyword">new</span> Object[] &#123;<span class="string">"会议议题列表"</span>&#125;);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="连表查询数据-结果集为多表字段"><a href="#连表查询数据-结果集为多表字段" class="headerlink" title="连表查询数据(结果集为多表字段)"></a>连表查询数据(结果集为多表字段)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">	 * 分页浏览参会人员</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> page</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> username 搜索</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> model</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> logInfos</span></div><div class="line"><span class="comment">	 * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">	 * <span class="doctag">@throws</span> SystemException</span></div><div class="line"><span class="comment">	 * <span class="doctag">@throws</span> ServiceException</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">public</span> Page  <span class="title">getTGxMeetingUserPage</span><span class="params">(Page page,TGxMeetingUser model)</span><span class="keyword">throws</span> SystemException,ServiceException</span>&#123;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			List palist=<span class="keyword">new</span> ArrayList();</div><div class="line">			StringBuffer hql = <span class="keyword">new</span> StringBuffer();</div><div class="line">			hql.append(<span class="string">"SELECT tu.id,tu.userId,us.userName as userName,tbo.orgName as userOrgName"</span>);</div><div class="line">			hql.append(<span class="string">" FROM TUumsBaseUser us, "</span>);</div><div class="line">			hql.append(<span class="string">" TGxMeetingUser tu,"</span>);</div><div class="line">			hql.append(<span class="string">" TUumsBaseOrg tbo"</span>);</div><div class="line">			hql.append(<span class="string">" WHERE us.userId = tu.userId "</span>);</div><div class="line">			hql.append( <span class="string">"AND us.orgId = tbo.orgId"</span>);</div><div class="line">			</div><div class="line">			<span class="keyword">if</span>(<span class="keyword">null</span>!=model.getUserName() &amp;&amp; !<span class="string">""</span>.equals(model.getUserName()))&#123;</div><div class="line">				hql.append(<span class="string">" and us.userName like ? "</span>);</div><div class="line">				palist.add(<span class="string">"%"</span>+model.getUserName()+<span class="string">"%"</span>);</div><div class="line">			&#125;</div><div class="line">			hql.append( <span class="string">" order by tu.id asc"</span>);</div><div class="line">			page=tGxMeetingUserDAO.find(page, hql.toString(),palist.toArray());</div><div class="line">			<span class="keyword">if</span>(<span class="keyword">null</span>!=page.getResult())&#123;</div><div class="line">				List&lt;TGxMeetingUser&gt; tmuList=<span class="keyword">new</span> ArrayList&lt;TGxMeetingUser&gt;();</div><div class="line">				TGxMeetingUser tmu=<span class="keyword">null</span>;</div><div class="line">				List&lt;Object&gt; objs=page.getResult();</div><div class="line">				<span class="keyword">for</span>(Object obj:objs)&#123;</div><div class="line">					tmu =<span class="keyword">new</span> TGxMeetingUser();</div><div class="line">					Object[] a = (Object[]) obj; </div><div class="line">					tmu.setId(a[<span class="number">0</span>].toString());</div><div class="line">					tmu.setUserId(a[<span class="number">1</span>].toString());</div><div class="line">					tmu.setUserName(a[<span class="number">2</span>].toString());</div><div class="line">					tmu.setUserOrgName(a[<span class="number">3</span>].toString());</div><div class="line">					tmuList.add(tmu);</div><div class="line">				&#125;</div><div class="line">				page.setResult(tmuList);</div><div class="line">			&#125;</div><div class="line">			</div><div class="line">			<span class="keyword">return</span> page;</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(MessagesConst.find_error,</div><div class="line">					<span class="keyword">new</span> Object[] &#123; <span class="string">"分页搜索参会用户"</span> &#125;);</div><div class="line">		&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">其中结果返回对象里面加入了其他与当前对象无关字段</div><div class="line">#加入注解@Transient不将字段加入数据库#</div><div class="line"><span class="keyword">private</span> String userName;<span class="comment">//用户名字</span></div><div class="line"><span class="keyword">private</span> String userOrgName;<span class="comment">//用户部门</span></div></pre></td></tr></table></figure>
<h3 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">	 * 添加</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> model</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(TGxMeetingUser model)</span> </span>&#123;</div><div class="line">		tGxMeetingUserDAO.save(model);</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<h3 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">		 * 编辑实体</span></div><div class="line"><span class="comment">		 * <span class="doctag">@param</span> model</span></div><div class="line"><span class="comment">		 */</span></div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(TGxMeetingUser model)</span></span>&#123;</div><div class="line">			<span class="keyword">this</span>.tGxMeetingUserDAO.update(model);</div><div class="line">		&#125;</div></pre></td></tr></table></figure>
<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">	 * 删除参会人员根据id</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> suggestionCode</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> loginfos</span></div><div class="line"><span class="comment">	 * <span class="doctag">@throws</span> SystemException</span></div><div class="line"><span class="comment">	 * <span class="doctag">@throws</span> ServiceException</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(String id,OALogInfo logInfo)</span></span></div><div class="line"><span class="function">			<span class="keyword">throws</span> SystemException, ServiceException </span>&#123;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			tGxMeetingUserDAO.delete(id);</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			 <span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(MessagesConst.save_error,               </div><div class="line">						<span class="keyword">new</span> Object[] &#123;<span class="string">"删除参与人员"</span>&#125;);</div><div class="line">		&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">**其中action里面一般批量删除**</div><div class="line"><span class="comment">//删除</span></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		String[] mrIdString = ids.split(<span class="string">","</span>);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;mrIdString.length;i++)&#123;</div><div class="line">			manager.delete(mrIdString[i],<span class="keyword">new</span> OALogInfo(<span class="string">"会议室管理-『删除』："</span>+mrIdString[i]));</div><div class="line">		&#125;</div><div class="line">		renderText(<span class="string">"reload"</span>);</div><div class="line">		<span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<h3 id="根据ID获取信息"><a href="#根据ID获取信息" class="headerlink" title="根据ID获取信息"></a>根据ID获取信息</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Transactional</span>(readOnly=<span class="keyword">true</span>)</div><div class="line">	<span class="function"><span class="keyword">public</span> TGxMeeting <span class="title">getTGxMeetingById</span><span class="params">(String roomId)</span> <span class="keyword">throws</span> SystemException,ServiceException</span>&#123;</div><div class="line">		<span class="keyword">try</span>&#123;</div><div class="line">			<span class="keyword">return</span> meetingDAO.get(roomId);</div><div class="line">		&#125;<span class="keyword">catch</span>(ServiceException e)&#123;</div><div class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(MessagesConst.find_error,               </div><div class="line">					<span class="keyword">new</span> Object[] &#123;<span class="string">"获取会议室信息"</span>&#125;);</div><div class="line">		&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<h3 id="人员选择树结构"><a href="#人员选择树结构" class="headerlink" title="人员选择树结构"></a>人员选择树结构</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 选择机构负责人,支持多选.</span></div><div class="line"><span class="comment"> * <span class="doctag">@author</span>:邓志城</span></div><div class="line"><span class="comment"> * <span class="doctag">@date</span>:2011-1-6 下午04:16:31</span></div><div class="line"><span class="comment"> * <span class="doctag">@return</span></span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">chooseOrgManager</span><span class="params">()</span> </span>&#123;</div><div class="line">	List&lt;TempPo&gt; nodes = <span class="keyword">new</span> LinkedList&lt;TempPo&gt;();</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">		List&lt;Organization&gt; orgList = userService.getAllDeparments();<span class="comment">//得到机构列表</span></div><div class="line">		Map&lt;String,List&lt;User&gt;&gt; userMap = userService.getUserMap();<span class="comment">//得到用户MAP：KEY：机构ID，VALUE：机构下的人员列表</span></div><div class="line">		List&lt;Organization&gt; newList = <span class="keyword">new</span> ArrayList&lt;Organization&gt;(orgList);</div><div class="line">		Collections.sort(newList, <span class="keyword">new</span> Comparator&lt;Organization&gt;()&#123;</div><div class="line">			<span class="meta">@Override</span></div><div class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Organization o1, Organization o2)</span> </span>&#123;</div><div class="line">				String code1 = o1.getOrgSyscode();</div><div class="line">				String code2 = o2.getOrgSyscode();</div><div class="line">				<span class="keyword">if</span>(code1 != <span class="keyword">null</span> &amp;&amp; code2 != <span class="keyword">null</span>) &#123;</div><div class="line">					<span class="keyword">return</span> code1.length() - code2.length();</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;);</div><div class="line">		String root = <span class="keyword">null</span>;</div><div class="line">		<span class="keyword">if</span>(!newList.isEmpty()) &#123;</div><div class="line">			root = newList.get(<span class="number">0</span>).getOrgSyscode();</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;orgList.size();i++) &#123;<span class="comment">//遍历塞值进去 (部门)</span></div><div class="line">			Organization organization = orgList.get(i);</div><div class="line">			TempPo po = <span class="keyword">new</span> TempPo();</div><div class="line">			po.setId(<span class="string">"o"</span>+organization.getOrgId());</div><div class="line">			po.setName(organization.getOrgName());</div><div class="line">			String parentId = organization.getOrgParentId();</div><div class="line">			po.setType(<span class="string">"o"</span>);</div><div class="line">			<span class="keyword">if</span>(organization.getOrgSyscode().equals(root)) &#123;<span class="comment">//判断树结构是否根节点</span></div><div class="line">				parentId = <span class="string">"0"</span>;</div><div class="line">			&#125; <span class="keyword">else</span> &#123;</div><div class="line">				parentId = parentId == <span class="keyword">null</span> ? <span class="string">"0"</span> : <span class="string">"o"</span> + parentId;<span class="comment">//自定义非根节点表示样式</span></div><div class="line">			&#125;</div><div class="line">			po.setParentId(parentId);<span class="comment">//---</span></div><div class="line">			nodes.add(po);</div><div class="line">			<span class="comment">//添加人员</span></div><div class="line">			List&lt;User&gt; userList = userMap.get(organization.getOrgId());</div><div class="line">			<span class="keyword">if</span>(userList != <span class="keyword">null</span>) &#123;</div><div class="line">				<span class="keyword">for</span>(User u : userList) &#123;</div><div class="line">					TempPo upo = <span class="keyword">new</span> TempPo();</div><div class="line">					upo.setId(u.getUserId());</div><div class="line">					upo.setName(u.getUserName());</div><div class="line">					upo.setParentId(po.getId());<span class="comment">//--对应部门</span></div><div class="line">					upo.setType(<span class="string">"u"</span>);</div><div class="line">					nodes.add(upo);	</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		userMap.clear();<span class="comment">//清空</span></div><div class="line">		orgList.clear();<span class="comment">//清空</span></div><div class="line">	&#125;<span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">		logger.error(<span class="string">"选择机构负责人发生异常"</span>, e);</div><div class="line">	&#125; </div><div class="line"></div><div class="line">	getRequest().setAttribute(<span class="string">"data"</span>, nodes);<span class="comment">//前台自定义树遍历值</span></div><div class="line">	getRequest().setAttribute(<span class="string">"id"</span>, getRequest().getParameter(<span class="string">"id"</span>));</div><div class="line">	getRequest().setAttribute(<span class="string">"ids"</span>, manager.getUserTreeIds());</div><div class="line">	<span class="keyword">return</span> <span class="string">"bigtree"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">其中的data在前台自定义标签里面自动遍历</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;获取当前用户&quot;&gt;&lt;a href=&quot;#获取当前用户&quot; class=&quot;headerlink&quot; title=&quot;获取当前用户&quot;&gt;&lt;/a&gt;获取当前用户&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;*service*&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Autowired&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; IUserService userService;&lt;span class=&quot;comment&quot;&gt;// 统一用户服务&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;String userId=userService.getCurrentUser().getUserId();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;列表显示数据&quot;&gt;&lt;a href=&quot;#列表显示数据&quot; class=&quot;headerlink&quot; title=&quot;列表显示数据&quot;&gt;&lt;/a&gt;列表显示数据&lt;/h3&gt;&lt;h4 id=&quot;连表查询但获取的是一个表的数据&quot;&gt;&lt;a href=&quot;#连表查询但获取的是一个表的数据&quot; class=&quot;headerlink&quot; title=&quot;连表查询但获取的是一个表的数据&quot;&gt;&lt;/a&gt;连表查询但获取的是一个表的数据&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>springboot启示篇</title>
    <link href="http://wenni328.github.io.com/2017/02/10/springboot%E5%90%AF%E7%A4%BA%E7%AF%87/"/>
    <id>http://wenni328.github.io.com/2017/02/10/springboot启示篇/</id>
    <published>2017-02-10T13:54:48.000Z</published>
    <updated>2017-08-17T02:54:34.634Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是springboot"><a href="#什么是springboot" class="headerlink" title="什么是springboot"></a>什么是springboot</h3><p>springboot是为了简化spring的创建、配置、等而出现的。使用springboot构建web项目，程序员不用过多考虑xml配置整合问题只需要专注写代码业务。springboot默认使用tomcat作为服务器，使用logback提供日志记录。</p>
<h3 id="用springboot构建你的第一个web工程"><a href="#用springboot构建你的第一个web工程" class="headerlink" title="用springboot构建你的第一个web工程"></a>用springboot构建你的第一个web工程</h3><h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><ul>
<li>–idea<a id="more"></a></li>
<li>–jdk1.8.0_102(最低使用1.7，官网推荐1.8)</li>
<li>–maven 3.3.9</li>
<li>–springboot 1.5.6RELEASE</li>
<li>–<a href="https://github.com/wenni328/springboot-base" target="_blank" rel="external">示例项目源码</a></li>
</ul>
<h4 id="新建springboot项目"><a href="#新建springboot项目" class="headerlink" title="新建springboot项目"></a>新建springboot项目</h4><p><img src="http://oufb2rqt9.bkt.clouddn.com/1%28JI~G%29_%7DR%5DP%7D_DPT%29%29KKFD.png" alt="项目"><br>选择默认的就行</p>
<h4 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h4><p><img src="http://oufb2rqt9.bkt.clouddn.com/springboot%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png" align="left" style="width:300px;height:300px;"><br>springboot默认<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">忙 ！没时间写了，后续再写</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是springboot&quot;&gt;&lt;a href=&quot;#什么是springboot&quot; class=&quot;headerlink&quot; title=&quot;什么是springboot&quot;&gt;&lt;/a&gt;什么是springboot&lt;/h3&gt;&lt;p&gt;springboot是为了简化spring的创建、配置、等而出现的。使用springboot构建web项目，程序员不用过多考虑xml配置整合问题只需要专注写代码业务。springboot默认使用tomcat作为服务器，使用logback提供日志记录。&lt;/p&gt;
&lt;h3 id=&quot;用springboot构建你的第一个web工程&quot;&gt;&lt;a href=&quot;#用springboot构建你的第一个web工程&quot; class=&quot;headerlink&quot; title=&quot;用springboot构建你的第一个web工程&quot;&gt;&lt;/a&gt;用springboot构建你的第一个web工程&lt;/h3&gt;&lt;h4 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;–idea
    
    </summary>
    
    
      <category term="springboot" scheme="http://wenni328.github.io.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>java集合类总览</title>
    <link href="http://wenni328.github.io.com/2017/01/17/java%E9%9B%86%E5%90%88%E7%B1%BB%E6%80%BB%E8%A7%88/"/>
    <id>http://wenni328.github.io.com/2017/01/17/java集合类总览/</id>
    <published>2017-01-17T05:09:31.000Z</published>
    <updated>2017-08-10T12:54:15.942Z</updated>
    
    <content type="html"><![CDATA[<p>Java所有的集合类都在java.util包中。</p>
<h3 id="Java最常用的集合类"><a href="#Java最常用的集合类" class="headerlink" title="Java最常用的集合类"></a>Java最常用的集合类</h3><h4 id="Collection接口"><a href="#Collection接口" class="headerlink" title="Collection接口"></a>Collection接口</h4><ul>
<li>–List接口(允许有重复元素)：ArrayList、LinkList、Vector、Stack</li>
<li>–Set接口(不允许用重复值) ：HashSet、TreeSet<a id="more"></a>
</li>
</ul>
<h4 id="Map接口"><a href="#Map接口" class="headerlink" title="Map接口"></a>Map接口</h4><ul>
<li>–HashMap</li>
<li>–TreeMap(具有按key排序功能)</li>
</ul>
<h3 id="对于Collection需要掌握的七点常用内容"><a href="#对于Collection需要掌握的七点常用内容" class="headerlink" title="对于Collection需要掌握的七点常用内容"></a>对于Collection需要掌握的七点常用内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Collection的创建：即构造器，掌握在构造器方法中Collection的实现类做了一些什么</div><div class="line">往Collection中添加对象：即add(E)方法---&gt;类的实现方式决定了此方法的性能</div><div class="line">删除Collection中的对象：即remove(E)方法---&gt;类的实现方式决定了此方法的性能</div><div class="line">获取Collection中的单个对象：即get(int index)方法---&gt;类的实现方式决定了此方法的性能</div><div class="line">遍历Collection中的对象：即iterator，在实际中更常用的是增强型的<span class="keyword">for</span>循环去做遍历</div><div class="line">判断对象是否存在于Collection中：contain(E)---&gt;类的实现方式决定了此方法的性能</div><div class="line">Collection中对象的排序：主要取决于所采取的排序算法</div></pre></td></tr></table></figure>
<h3 id="对于Map需要掌握的七点常用内容"><a href="#对于Map需要掌握的七点常用内容" class="headerlink" title="对于Map需要掌握的七点常用内容"></a>对于Map需要掌握的七点常用内容</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Map的创建：即构造器，掌握在构造器方法中Map的实现类做了一些什么</div><div class="line">往Map中添加键值对：即put(Object key, Object value)方法</div><div class="line">删除Map中的对象：即remove(Object key)方法</div><div class="line">获取Map中的单个对象：即get(Object key)方法</div><div class="line">判断对象是否存在于Map中：containsKey(Object key)</div><div class="line">遍历Map中的对象：即keySet()和iterator，在实际中更常用的是增强型的<span class="keyword">for</span>循环去做遍历</div><div class="line">Map中对象的排序：主要取决于所采取的排序算法</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java所有的集合类都在java.util包中。&lt;/p&gt;
&lt;h3 id=&quot;Java最常用的集合类&quot;&gt;&lt;a href=&quot;#Java最常用的集合类&quot; class=&quot;headerlink&quot; title=&quot;Java最常用的集合类&quot;&gt;&lt;/a&gt;Java最常用的集合类&lt;/h3&gt;&lt;h4 id=&quot;Collection接口&quot;&gt;&lt;a href=&quot;#Collection接口&quot; class=&quot;headerlink&quot; title=&quot;Collection接口&quot;&gt;&lt;/a&gt;Collection接口&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;–List接口(允许有重复元素)：ArrayList、LinkList、Vector、Stack&lt;/li&gt;
&lt;li&gt;–Set接口(不允许用重复值) ：HashSet、TreeSet
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo搭建免费博客</title>
    <link href="http://wenni328.github.io.com/2017/01/16/hexo%E9%9A%8F%E7%AC%94/"/>
    <id>http://wenni328.github.io.com/2017/01/16/hexo随笔/</id>
    <published>2017-01-15T23:33:44.000Z</published>
    <updated>2017-08-10T11:46:28.491Z</updated>
    
    <content type="html"><![CDATA[<h3 id="准备条件"><a href="#准备条件" class="headerlink" title="准备条件"></a>准备条件</h3><ol>
<li>首先你得有一个自己的<a href="https://github.com/" target="_blank" rel="external">github</a>账号，没有的话去注册一个吧。</li>
<li>其次你的电脑上需要<a href="http://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="external">安装</a>nodeJs和npm，这是前提条件。</li>
<li>第三，作为一个开发者，git怎么能缺少呢，安装一个git for windows客户端吧。</li>
</ol>
<h3 id="搭建你的博客"><a href="#搭建你的博客" class="headerlink" title="搭建你的博客"></a>搭建你的博客</h3><h4 id="创建Github仓库"><a href="#创建Github仓库" class="headerlink" title="创建Github仓库"></a>创建Github仓库</h4><p>   新建一个名为: 你的用户名.github.io的仓库,比如我的github用户名是wenni328,新建的仓库就为wenni328.github.io(<font color="red">这里必须是你的用户名</font>)<br><a id="more"></a></p>
<h4 id="配置ssh-key"><a href="#配置ssh-key" class="headerlink" title="配置ssh key"></a>配置ssh key</h4><p>在git命令窗口输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~/. ssh <span class="comment">#检查本机已存在的ssh key</span></div></pre></td></tr></table></figure></p>
<p>如果提示：No such file or directory，说明你是第一次使用git，需要自动生成一下<br>输入如下命令，按三次回车键即可生成一份<font color="#CDAD00">.ssh\id_rsa.pub</font>文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C <span class="string">"邮件地址"</span></div></pre></td></tr></table></figure></p>
<p>用记事本打开这份生成的文件，ctrl+a复制里面内容，登录你的github找到SSH and GPG keys，选择New,然后将复制内容粘贴到内容框就行<br><img src="http://oufb2rqt9.bkt.clouddn.com/gitub.PNG" alt="步骤说明"><br>然后我们测试一下ssh key是否配置成功，git窗口输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com <span class="comment">#直接复制这句，不用改</span></div></pre></td></tr></table></figure></p>
<p>如果出现提示：<font color="#8B1A1A">Are you sure you want to continue connecting (yes/no)?</font>  ，输入yes，看到<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">....You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></div></pre></td></tr></table></figure></p>
<p>这就说明已经配置成功了</p>
<h3 id="开始你的Hexo"><a href="#开始你的Hexo" class="headerlink" title="开始你的Hexo"></a>开始你的Hexo</h3><h4 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo</div></pre></td></tr></table></figure>
<h4 id="Hexo初始化"><a href="#Hexo初始化" class="headerlink" title="Hexo初始化"></a>Hexo初始化</h4><p>新建一个文件夹用来存放Hexo主题以及代码的。比如我的是<font color="res">D:\javaSoft\hexo</font><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> /d/javaSoft/hexo</div><div class="line">$ hexo init</div></pre></td></tr></table></figure></p>
<p>等待一段时间，生成目录结构为<br><img src="http://oufb2rqt9.bkt.clouddn.com/hexo%E7%9B%AE%E5%BD%95.png" alt="目录结构"><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo g <span class="comment">#生成文件</span></div><div class="line">$ hexo s <span class="comment">#启动服务</span></div></pre></td></tr></table></figure></p>
<p>然后访问<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a>可以看到你的博客（这是默认主题，hexo还有很多主题）。</p>
<h4 id="Hexo更换主题"><a href="#Hexo更换主题" class="headerlink" title="Hexo更换主题"></a>Hexo更换主题</h4><p>我比较喜欢next主题，大家可以换成你们喜欢的主题。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> /d/javaSoft/hexo</div><div class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next.git themes/Next</div></pre></td></tr></table></figure></p>
<p>下载后存放地址：<br><img src="http://oufb2rqt9.bkt.clouddn.com/%60V%29$B~GB2I%5DVYOB4Y0~OJGT.png" alt="主题存放"><br>然后找到hexo下的<font color="red">_config.yml</font>,打开,查找<font color="red">theme: landscape</font>改成<font color="red">theme: Next</font><br>然后执行hexo g重新生成一下，hexo s 启动服务，<br>至此，我们的博客就已经搭建好了。</p>
<h4 id="上传到你的githUb"><a href="#上传到你的githUb" class="headerlink" title="上传到你的githUb"></a>上传到你的githUb</h4><h5 id="ssh-key配置"><a href="#ssh-key配置" class="headerlink" title="ssh key配置"></a>ssh key配置</h5><p>我们要让github和hexo连接起来，进行hexo下的<font color="red">_config.yml</font>相关deploy配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: git@github.com:github用户名/github用户名.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>连接了github之后我们需要再安装一个插件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p>发布，将本地博客文件发布到网站博客上，命令比较简单<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo d</div></pre></td></tr></table></figure></p>
<p>新建页面指令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page <span class="string">"页面名称"</span></div></pre></td></tr></table></figure></p>
<p>会自动生成在hexo主题下的source/_post文件夹下，然后就可以继续你的编写了<br>之后你就可以访问你的博客了：<a href="https://github账号.github.io/" target="_blank" rel="external">https://github账号.github.io/</a><br>当然这里设置的都是比较普通的博客，如果你想个性化定制自己的博客<br>推荐<a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="external">个性化设置Hexo</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;准备条件&quot;&gt;&lt;a href=&quot;#准备条件&quot; class=&quot;headerlink&quot; title=&quot;准备条件&quot;&gt;&lt;/a&gt;准备条件&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;首先你得有一个自己的&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;账号，没有的话去注册一个吧。&lt;/li&gt;
&lt;li&gt;其次你的电脑上需要&lt;a href=&quot;http://www.runoob.com/nodejs/nodejs-install-setup.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;安装&lt;/a&gt;nodeJs和npm，这是前提条件。&lt;/li&gt;
&lt;li&gt;第三，作为一个开发者，git怎么能缺少呢，安装一个git for windows客户端吧。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;搭建你的博客&quot;&gt;&lt;a href=&quot;#搭建你的博客&quot; class=&quot;headerlink&quot; title=&quot;搭建你的博客&quot;&gt;&lt;/a&gt;搭建你的博客&lt;/h3&gt;&lt;h4 id=&quot;创建Github仓库&quot;&gt;&lt;a href=&quot;#创建Github仓库&quot; class=&quot;headerlink&quot; title=&quot;创建Github仓库&quot;&gt;&lt;/a&gt;创建Github仓库&lt;/h4&gt;&lt;p&gt;   新建一个名为: 你的用户名.github.io的仓库,比如我的github用户名是wenni328,新建的仓库就为wenni328.github.io(&lt;font color=&quot;red&quot;&gt;这里必须是你的用户名&lt;/font&gt;)&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://wenni328.github.io.com/2017/01/15/hello-world/"/>
    <id>http://wenni328.github.io.com/2017/01/15/hello-world/</id>
    <published>2017-01-15T13:54:48.000Z</published>
    <updated>2017-08-14T07:29:32.757Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
